[[elasticsearch-differences]]
= Differences from other {es} offerings
++++
<titleabbrev>Serverless differences</titleabbrev>
++++

// :description: Understand how serverless Elasticsearch differs from Elastic Cloud Hosted and self-managed offerings.
// :keywords: serverless, elasticsearch

{es-serverless} abstracts away infrastructure management from users, providing a fully managed {es} service.
If you've used {es} before, you'll notice some differences in how you work with the service on serverless, because a number of APIs and settings are not required for serverless projects.
This guide helps you understand what's different, what's available, and how to work effectively when running {es} on {serverless-full}.

[discrete]
[[elasticsearch-differences-serverless-infrastructure-management]]
== Infrastructure management overview

{es-serverless} handles infrastructure management automatically, including:

* Cluster scaling and optimization
* Node management and allocation
* Shard distribution and replication
* Resource utilization and monitoring

[discrete]
[[elasticsearch-differences-serverless-aps-settings]]
== APIs and settings

Because {es-serverless} manages infrastructure automatically, certain APIs and settings are not available, while others remain fully accessible.

[TIP]
====
Refer to the {es-serverless} https://www.elastic.co/docs/api/[API Reference] for a complete list of available APIs.
====

[discrete] 
[[elasticsearch-differences-serverless-api-availability]]
=== API availability

The following categories of operations are *unavailable* since they are managed by the serverless platform:

Infrastructure operations::
* All `_nodes/*` operations 
* All `_cluster/*` operations
* Most `_cat/*` operations, except for index-related operations such as `/_cat/indices` and `/_cat/aliases`

Storage and backup::
* All `_snapshot/*` operations
* Repository management operations

Index management:: 
* `indices/close` operations
* `indices/open` operations
* Recovery and stats operations
* Force merge operations

[discrete]
[[elasticsearch-differences-serverless-settings-availability]]  
=== Settings availability

In {es-serverless}, you can only configure index-level settings.
Cluster-level settings and node-level settings are not required by end users and the `elasticsearch.yml` file is fully managed by Elastic.

Available settings::
* *Index-level settings*. Settings that control how {es} documents are processed, stored, and searched are available to end users, including:
** Analysis configuration
** Mapping parameters
** Search/query settings
** Indexing settings such as `refresh_interval`

Managed settings::
* *Infrastructure-related settings*. Settings that affect cluster resources or data distribution are not available to end users, including:
** Node configurations
** Cluster topology
** Shard allocation
** Resource management

[discrete]
[[elasticsearch-differences-serverless-api-errors]]
=== API error handling

When attempting to use an unavailable API or setting, you'll receive a clear error message:

[source,json]
----
{
 "error": {
   "root_cause": [
     {
       "type": "api_not_available_exception",
       "reason": "Request for uri [/<API_ENDPOINT>] with method [<METHOD>] exists but is not available when running in serverless mode"
     }
   ],
   "status": 410
 }
}
----

[discrete]
[[elasticsearch-differences-serverless-feature-categories]]
== Feature availability

Some features that are available in Elastic Cloud Hosted and self-managed offerings are not available in {es-serverless}, while others are planned for future support.

The following features have been replaced by a new feature:

* **Index lifecycle management ({ilm-init})** is not available, in favor of <<index-management,**data stream lifecycle**>>.
+
In an Elastic Cloud Hosted or self-managed environment, {ilm-init} lets you automatically transition indices through data tiers according to your
performance needs and retention requirements. This allows you to balance hardware costs with performance. {es-serverless} eliminates this
complexity by optimizing your cluster performance for you.
+
Data stream lifecycle is an optimized lifecycle tool that lets you focus on the most common lifecycle management needs, without unnecessary
hardware-centric concepts like data tiers.
+
* **Watcher** is not available, in favor of **<<elasticsearch-explore-your-data-alerting,Kibana Alerts>>**.
+
Kibana Alerts allows rich integrations across use cases like APM, metrics, security, and uptime. Prepackaged rule types simplify setup and
hide the details of complex, domain-specific detections, while providing a consistent interface across Kibana.

[discrete]
[[elasticsearch-differences-serverless-feature-planned]]
=== Planned features

The following core features are planned for future support:

* Reindexing from remote clusters 
* Cross-cluster search and replication
* Snapshot and restore
* Migrations from non-serverless deployments
* Audit logging
* Authentication realms (native/SAML/OIDC/Kerberos/JWT)
* Clone index API

The following Search features are planned for future support:

* {ref}/behavioral-analytics-overview.html[Behavioral Analytics]
* {ref}/search-application-overview.html[Search Applications]
* {enterprise-search-ref}/crawler.html[Managed web crawler]
** You can use the https://github.com/elastic/crawler[self-managed web crawler] in the meantime.
* {ref}/es-native-connectors.html[Elastic managed Search connectors]
** You can use the {ref}/es-build-connector.html[self-managed Search connectors] in the meantime.

[discrete]
[[elasticsearch-differences-serverless-feature-unavailable]]
=== Permanently unavailable features

The following features are not available in {es-serverless} and are not planned for future support:

* https://www.elastic.co/guide/en/cloud/current/ec-custom-bundles.html[Custom plugins and bundles]
* https://www.elastic.co/guide/en/elasticsearch/hadoop/current/reference.html[{es} for Apache Hadoop]
* {ref}/search-aggregations-metrics-scripted-metric-aggregation.html[Scripted metric aggregations] are not available.

[discrete]
[[elasticsearch-differences-serverless-workloads]]
== Workloads

Currently, workloads outside of the following ranges may experience higher latencies (greater than sub-second):

* Search queries on indices greater than 150GB
* Index queries per second (QPS) greater than 1000
* Search queries per second (QPS) greater than 1800