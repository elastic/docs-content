[[elasticsearch-get-started]]
= Get started

// :description: Get started with {es3} in a few steps
// :keywords: serverless, elasticsearch, getstarted, overview

preview:[]

Follow along to set up your {es} project and get started with some sample documents.
Then, choose how to continue with your own data.

[discrete]
[[elasticsearch-get-started-create-project]]
== Create project

Use your {ecloud} account to create a fully-managed {es} project:

. Navigate to {ess-console}[cloud.elastic.co] and create a new account or log in to your existing account.
. Within **Serverless Projects**, choose **Create project**.
. Choose the {es} project type.
. Select a **configuration** for your project, based on your use case.
+
** **General purpose**. For general search use cases across various data types.
** **Optimized for Vectors**. For search use cases using vectors and near real-time retrieval.
. Provide a name for the project and optionally edit the project settings, such as the cloud platform <<regions,region>>.
Select **Create project** to continue.
. Once the project is ready, select **Continue**.

include::../partials/minimum-vcus-detail.asciidoc[]

[discrete]
[[elasticsearch-get-started-create-index]]
== Create an index

Once your project is set up, you'll be directed to a page where you can create your first index. 
An index is where documents are stored and organized, making it possible to search and retrieve data.

. Enter a name for your index.
. Click *Create my index*. You can also create the index by clicking on *Code* to view and run code through the command line.
+
image::images/get-started-create-an-index.png[Create an index.]

. You’ll be directed to the *Index Management* page. Here, copy and save the following:
- Elasticsearch URL
- API key

[NOTE]
====
You won’t be able to view this API key again. If needed, refer to <<elasticsearch-create-new-api-key,Create a new API key>> to generate a new one.
====

The UI provides ready-to-use code examples for ingesting data via the REST API. 
Choose your preferred tool for making these requests:

* Elastic Console in your project's UI
* Python 
* JavaScript 
* cURL

[discrete]
[[elasticsearch-get-started-continue-on-your-own]]
== Ingest data

Elasticsearch provides several methods for ingesting data:

* <<elasticsearch-ingest-data-through-api,{es} API>>
* <<elasticsearch-ingest-data-through-integrations-connector-client,Connector clients>>
* <<elasticsearch-ingest-data-file-upload,File Uploader>>
* <<elasticsearch-ingest-data-through-beats,{beats}>>
* <<elasticsearch-ingest-data-through-logstash,{ls}>>
* https://github.com/elastic/crawler[Elastic Open Web Crawler]

For more information on data ingestion and synchronization, 
see <<elasticsearch-ingest-your-data>>. 
To learn about the search API and query DSL, refer to <<elasticsearch-http-apis>>.

////
/*
- <DocLink slug="/serverless/elasticsearch/search-your-data" />
- <DocLink slug="/serverless/elasticsearch/search-your-data-the-search-api" />
*/
////

[discrete]
[[elasticsearch-get-started-explore]]
== Explore

*Create a data view*: You can explore data using UI tools like Discover or Dashboards by creating a data view. 
Or, you can use {es} aggregations to explore data through the API. Find more information in <<elasticsearch-explore-your-data>>.

*Try Playground*: You can test {es} queries and combine {es} data with LLMs for retrieval augmented generation (RAG) in the 
<<elasticsearch-playground>>.

*Search your data*: You can perform search queries in {es} to filter by exact values, 
conduct full-text searches, or use vector search. Learn more in <<elasticsearch-search-your-data>>.

*Use semantic search*: You can retrieve data based on intent and context using NLP and vector embeddings with 
<<elasticsearch-reference-semantic-search>>.
