This is how an ingest pipeline that uses a text embedding model is created:

[source,bash]
----
curl -X PUT "${ES_URL}/_ingest/pipeline/my-text-embeddings-pipeline" \
-H "Authorization: ApiKey ${API_KEY}" \
-H "Content-Type: application/json" \
-d'
{
  "description": "Text embedding pipeline",
  "processors": [
    {
      "inference": {
        "model_id": "sentence-transformers__msmarco-minilm-l-12-v3",   <1>
        "target_field": "my_embeddings",
        "field_map": {   <2>
          "my_text_field": "text_field"
        }
      }
    }
  ]
}
'
----

<1> The model ID of the text embedding model you want to use.

<2> The `field_map` object maps the input document field name (which is
`my_text_field` in this example) to the name of the field that the model expects
(which is always `text_field`).

To ingest data through the pipeline to generate text embeddings with your chosen
model, refer to the
{ml-docs}/ml-nlp-text-emb-vector-search-example.html#ex-text-emb-ingest[Add the text embedding model to an inference ingest pipeline]
section. The example shows how to create the pipeline with the inference
processor and reindex your data through the pipeline. After you successfully
ingested documents by using the pipeline, your index will contain the text
embeddings generated by the model.
